version: '3.8'

services:
  cloudflare-dns:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cloudflare-dns-manager
    restart: unless-stopped
    ports:
      - "80:5000"
    volumes:
      - dns_data:/app/instance
      - ./logs:/app/logs
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
    networks:
      - dns_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: cloudflare-dns-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - cloudflare-dns
    networks:
      - dns_network
    profiles:
      - with-nginx

  # Мониторинг с Prometheus (опционально)
  prometheus:
    image: prom/prometheus:latest
    container_name: cloudflare-dns-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - dns_network
    profiles:
      - monitoring

networks:
  dns_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  dns_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  prometheus_data:
    driver: local 